package com.kh.pet.controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.kh.pet.model.vo.Reservation;
import com.kh.pet.service.MemberService;
import com.kh.pet.service.ReservationService;

@RestController
@RequestMapping("/reservation")
public class ReservationController {

    @Autowired
    private ReservationService reservationService;

    @Autowired
    private MemberService memberService;

    // 예약 목록 조회
    @GetMapping("/list")
    public List<Reservation> getReservationList() {
        return reservationService.getReservationList();
    }

    // 특정 예약 조회
    @GetMapping("/get/{id}")
    public Reservation getReservation(@PathVariable String id) {
        return reservationService.getReservationById(id);
    }

    // 새로운 예약 추가
    @PostMapping("/add")
    public String addReservation(
            @RequestParam String petsitter,
            @RequestParam Integer petNum,
            @RequestParam Integer careTime,
            @RequestParam String date,
            @RequestParam Boolean bathService,
            @RequestParam Boolean walkService,
            @RequestParam Boolean pickupService
    ) {
        Reservation reservation = new Reservation();
        reservation.setPetsitter(petsitter);
        reservation.setPetNum(petNum);
        reservation.setCareTime(careTime);
        reservation.setDate(date);
        reservation.setBathService(bathService);
        reservation.setWalkService(walkService);
        reservation.setPickupService(pickupService);

        try {
            reservationService.addReservation(reservation);
            // 성공 시 마이페이지로 리다이렉트
            return "redirect:/mypage";
        } catch (Exception e) {
            // 실패 시 예약 페이지로 다시 이동 (다시 시도할 수 있도록)
            return "redirect:/reservation/add";
        }
    }

    // 예약 정보 수정
    @PostMapping("/update/{id}")
    public String updateReservation(
            @PathVariable String id,
            @RequestParam String petsitter,
            @RequestParam Integer petNum,
            @RequestParam Integer careTime,
            @RequestParam String date,
            @RequestParam Boolean bathService,
            @RequestParam Boolean walkService,
            @RequestParam Boolean pickupService
    ) {
        Reservation reservation = new Reservation();
        reservation.setId(id);
        reservation.setPetsitter(petsitter);
        reservation.setPetNum(petNum);
        reservation.setCareTime(careTime);
        reservation.setDate(date);
        reservation.setBathService(bathService);
        reservation.setWalkService(walkService);
        reservation.setPickupService(pickupService);

        try {
            reservationService.updateReservation(reservation);
            // 성공 시 Index 페이지로 리다이렉트
            return "redirect:/index";
        } catch (Exception e) {
            // 실패 시 마이페이지에 머무름
            return "redirect:/mypage";
        }
    }
    // 예약 삭제
    @DeleteMapping("/delete/{id}")
    public String deleteReservation(@PathVariable String id) {
    	 try {
    	        reservationService.deleteReservation(id);
    	        // 성공 시 Index 페이지로 리다이렉트
    	        return "redirect:/index";
    	    } catch (Exception e) {
    	        // 실패 시 마이페이지에 머무름
    	        return "redirect:/mypage";
    	    }
    }
}