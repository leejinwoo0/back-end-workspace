import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

// ...

// 새로운 예약 추가
@PostMapping("/add")
public String addReservation(
        @RequestParam String petsitter,
        @RequestParam Integer petNum,
        @RequestParam String careTime, // String으로 받아서 변환
        @RequestParam String date,
        @RequestParam Boolean bathService,
        @RequestParam Boolean walkService,
        @RequestParam Boolean pickupService
) {
    System.out.println("addReservation 메서드 호출");
    
    // 현재 사용자 정보를 가져옴
    Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
    Member member = (Member) authentication.getPrincipal(); // 현재 로그인한 회원 정보 가져오기

    Reservation reservation = new Reservation();
    reservation.setPetsitter(petsitter);
    reservation.setPetNum(petNum);

    // LocalTime으로 변환
    LocalTime localCareTime;
    try {
        // 'careTime'이 정수형일 경우, '06:00'과 같은 형식으로 변환
        if (careTime.matches("\\d+")) { // 숫자만 포함된 경우
            int hours = Integer.parseInt(careTime);
            localCareTime = LocalTime.of(hours, 0); // 정수형 시간으로 LocalTime 생성
        } else {
            localCareTime = LocalTime.parse(careTime); // 일반적인 HH:mm 형식
        }
    } catch (DateTimeParseException e) {
        System.out.println("careTime 변환 실패: " + e.getMessage());
        return "redirect:/reservation/add"; // 변환 실패 시 다시 예약 페이지로
    }

    reservation.setCareTime(localCareTime);
    
    reservation.setDate(date);
    reservation.setBathService(bathService);
    reservation.setWalkService(walkService);
    reservation.setPickupService(pickupService);
    
    reservation.setId(member.getId());

    try {
        reservationService.addReservation(reservation);
        return "redirect:/reservation/list"; // 예약 후 마이페이지로 리다이렉트
    } catch (Exception e) {
        System.out.println("예약 추가 실패: " + e.getMessage());
        return "redirect:/reservation/add"; // 실패 시 다시 예약 페이지로
    }
}

// 예약 정보 수정
@PostMapping("/update/{id}")
public String updateReservation(
        @PathVariable String id,
        @RequestParam String petsitter,
        @RequestParam Integer petNum,
        @RequestParam String careTime, // String으로 받아서 변환
        @RequestParam String date,
        @RequestParam Boolean bathService,
        @RequestParam Boolean walkService,
        @RequestParam Boolean pickupService
) {
    System.out.println("updateReservation 메서드 호출, ID: " + id);

    Reservation reservation = new Reservation();
    reservation.setId(id);
    reservation.setPetsitter(petsitter);
    reservation.setPetNum(petNum);

    // LocalTime으로 변환
    LocalTime localCareTime;
    try {
        // 'careTime'이 정수형일 경우, '06:00'과 같은 형식으로 변환
        if (careTime.matches("\\d+")) { // 숫자만 포함된 경우
            int hours = Integer.parseInt(careTime);
            localCareTime = LocalTime.of(hours, 0); // 정수형 시간으로 LocalTime 생성
        } else {
            localCareTime = LocalTime.parse(careTime); // 일반적인 HH:mm 형식
        }
    } catch (DateTimeParseException e) {
        System.out.println("careTime 변환 실패: " + e.getMessage());
        return "redirect:/mypage"; // 변환 실패 시 마이페이지로 리다이렉트
    }

    reservation.setCareTime(localCareTime);
    
    reservation.setDate(date);
    reservation.setBathService(bathService);
    reservation.setWalkService(walkService);
    reservation.setPickupService(pickupService);

    try {
        reservationService.updateReservation(reservation);
        return "redirect:/mypage"; // 성공 시 마이페이지로 리다이렉트
    } catch (Exception e) {
        System.out.println("예약 수정 실패: " + e.getMessage());
        return "redirect:/mypage"; // 실패 시 마이페이지에 머무름
    }
}
